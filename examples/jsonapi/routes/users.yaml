swagger: '2.0'
# paths
paths:
  users:
    get:
      summary: 'Users list'
      tags:
        - 'user'
      parameters:
        - name: filter
          description: 'Filter options'
          in: query
          type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            required:
              - meta
              - data
            properties:
              meta:
                $ref: '../responses.yaml#/definitions/PaginationMeta'
              data:
                type: array
                minItems: 3
                maxItems: 20
                items:
                  $ref: '../models.yaml#/definitions/UserResource'
                
    post:
      summary: 'Create User'
      tags:
        - 'user'
      security:
        - bearerAuth: []
      parameters:
      - name: body
        in: body
        schema:
          required:
            - data
          properties:
            data: 
              type: object
              required:
                - type
                - attributes
              properties:
                type:
                  type: string
                  enum: 
                    - user
                attributes:
                  allOf:
                    - $ref: "../models.yaml#/definitions/UserModelDraft"
                    - type: object
                      required:
                      - password
                      properties:
                        password:
                          type: string
                          example:
                            123456     
      responses:
        201:
          description: Created
          schema:
            type: object
            required:
              - data
            properties:
              data: 
                $ref: '../models.yaml#/definitions/UserResource'
        422:
          $ref: '../responses.yaml#/responses/422'   

  user:
    get:
      summary: 'User details'
      tags:
        - 'user'
      parameters:
        - $ref: '../params.yaml#/parameters/{user_id}'
      responses:
        200:
          description: OK
          schema:
            type: object
            required:
              - data
            properties:
              data: 
                $ref: '../models.yaml#/definitions/UserResource'
        404:
          $ref: '../responses.yaml#/responses/404'
    patch:
      summary: 'Update User'
      tags:
        - 'user'
      security:
        - bearerAuth: []
      parameters:
        - name: body
          in: body
          schema:
            required:
              - data
            properties:
              data: 
                type: object
                required:
                  - type
                  - id
                  - attributes
                properties:
                  type:
                    type: string
                    enum: 
                      - user
                  id:
                    type: integer
                    minimum: 1
                    example: 23
                  attributes:
                    $ref: "../models.yaml#/definitions/UserModelDraft"
             
      responses:
        200:
          description: OK
          schema:
            type: object
            required:
              - data
            properties:
              data: 
                $ref: '../models.yaml#/definitions/UserResource'
        422:
          $ref: '../responses.yaml#/responses/422'
        404:
          $ref: '../responses.yaml#/responses/404'
    delete:
      summary: 'Delete User'
      tags:
        - 'user'
      security:
        - bearerAuth: []
      parameters:
        - $ref: '../params.yaml#/parameters/{user_id}'
      responses:
        204:
          $ref: '../responses.yaml#/responses/204'
        404:
          $ref: '../responses.yaml#/responses/404'
